--------------------  ************************************************************************
--------------------          SECOND STEP: CALCULATING THE DIFFERENT TIME SUMMATION 
--------------------  ************************************************************************

CREATE OR REPLACE FUNCTION createSummationTable(sourceTableName TEXT)
  RETURNS VOID
  LANGUAGE plpgsql AS
$func$
BEGIN
  PERFORM  createAddedNecessaryTable(sourceTableName);
  EXECUTE format(E'             -- format E before single qutation and \ single qutation is used for making it possible to use extral single qutation between two single qutation.
  CREATE TEMPORARY TABLE tempSummation_%I  AS(
      SELECT 
          t."Year",
          t."Month",
          t."Week",
          t."Day",
          t."DateStamp",
          t."shift",
          t."processGroup",
          t."processName",
          t."shiftDuration",
          t."skuName",
          t."operatorId",
          t."targetRate",
          t."rateDenominator",

          SUM (t."output")                              AS "output",
          
          SUM (t."ExpectedOutput") / "rateDenominator"  AS "ExpectedOutput",
          
          SUM(t."scheduledTime") / 60000                AS "scheduledTime",
          
          SUM(t."producingDuration") / 60000            AS "producingTime",
          SUM(SIGN(t."producingDuration"))              AS "producingNumber",

          SUM(t."plannedDuration") / 60000              AS "plannedTime",
          SUM(SIGN(t."plannedDuration"))                AS "plannedNumber",
          
          SUM(t."unplannedDuration") / 60000            AS "unplannedTime",
          SUM(SIGN(t."unplannedDuration"))              AS "unplannedNumber",
          
          SUM(t."waitingDuration") / 60000              AS "waitingTime",
          SUM(SIGN(t."waitingDuration"))                AS "waitingNumber",
          
          SUM(t."notScheduledDuration") / 60000         AS "notScheduledTime",
          SUM(SIGN(t."notScheduledDuration"))           AS "notScheduledNumber",
          
          SUM(t."unknownDuration") / 60000              AS "unknownTime",
          SUM(SIGN(t."unknownDuration"))                AS "unknownNumber",
          
          SUM(t."uncollectedDuration") / 60000          AS "uncollectedTime",
          SUM(SIGN(t."uncollectedDuration"))            AS "uncollectedNumber"
          
      FROM tempAddedNecessary_%I  t
      GROUP BY t."Year", t."Month", t."Week", t."Day", t."DateStamp", t."shift", t."processGroup", t."processName", t."skuName", t."operatorId" , t."shiftDuration", t."targetRate", t."rateDenominator"
      ORDER BY t."Year", t."Month", t."Week", t."Day", t."DateStamp",  t."shift", t."processGroup", t."processName", t."skuName", t."operatorId" , t."shiftDuration", t."targetRate"
      )', sourceTableName, sourceTableName);
      
  EXECUTE 'DROP TABLE IF exists temp11';
  EXECUTE FORMAT(E'
          CREATE TEMPORARY TABLE temp11 AS 
            (SELECT 
                t."Year",
                t."Month",
                t."Week",
                t."Day",
                t."DateStamp",
                t."shift",
                t."processGroup",
                t."processName",
                t."shiftDuration",
                t."skuName",
                t."operatorId",
                t."output",
                t."ExpectedOutput",
                t."scheduledTime",
                t."producingTime",
                t."plannedTime",
                t."unplannedTime",
                t."waitingTime",
                t."notScheduledTime",
                t."unknownTime",
                t."uncollectedTime",
                t."producingNumber",
                t."plannedNumber",
                t."unplannedNumber",
                t."waitingNumber",
                t."notScheduledNumber",
                t."unknownNumber",
                t."uncollectedNumber",
                t."producingTime" + t."plannedTime" + t."unplannedTime" + t."waitingTime" + t."notScheduledTime" + t."unknownTime" + t."uncollectedTime" AS totalTime

            FROM tempSummation_%I t);
            
            DROP TABLE IF exists tempSummation_%I;
            
            ALTER TABLE temp11 RENAME TO tempSummation_%I;
            
            DROP TABLE IF exists temp11
            ', sourceTableName, sourceTableName, sourceTableName);
            
END
$func$;


--------------------  ************************************************************************
--------------------                THE WAY THAT YOU CAN CALL THIS FUNCTION 
--------------------  ************************************************************************
SELECT createAddedNecessaryTable('sanofii');
SELECT createSummationTable('sanofii');

SELECT * FROM tempSummation_sanofii
